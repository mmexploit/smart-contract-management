{
	"compiler": {
		"version": "0.8.25+commit.b61c2a91"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Received",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "participantAdd",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "ids",
						"type": "uint256[]"
					}
				],
				"name": "UserAssigned",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "userAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "contractId",
						"type": "uint256"
					}
				],
				"name": "contractExecuted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "userAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "contractId",
						"type": "uint256"
					}
				],
				"name": "contractorAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "userAddress",
						"type": "address"
					}
				],
				"name": "contractorClosed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "userAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "contractId",
						"type": "uint256"
					}
				],
				"name": "contractorRegistered",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "userAddress",
						"type": "address"
					}
				],
				"name": "contractorSealed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "contractId",
						"type": "uint256"
					}
				],
				"name": "newContractCreated",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_contractId",
						"type": "uint256"
					},
					{
						"internalType": "enum ContractManagment.VoteType",
						"name": "_voteType",
						"type": "uint8"
					}
				],
				"name": "castVote",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "_userAddress",
						"type": "address"
					},
					{
						"internalType": "address[]",
						"name": "participants",
						"type": "address[]"
					},
					{
						"internalType": "string",
						"name": "_organizationId",
						"type": "string"
					},
					{
						"internalType": "enum Contracts.ContractType",
						"name": "_contractType",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "createContract",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "generateUniqueId",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_contractId",
						"type": "uint256"
					}
				],
				"name": "getContract",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "_contractId",
								"type": "uint256"
							},
							{
								"internalType": "enum Contracts.ContractState",
								"name": "contractState",
								"type": "uint8"
							},
							{
								"internalType": "enum Contracts.ContractType",
								"name": "contractType",
								"type": "uint8"
							},
							{
								"internalType": "uint32",
								"name": "numberOfParticipants",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "forVotes",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "againstVotes",
								"type": "uint32"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "payableUserAddress",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "payeeAddress",
								"type": "address"
							},
							{
								"internalType": "bool",
								"name": "hasPaidToContractAdmin",
								"type": "bool"
							}
						],
						"internalType": "struct Contracts.Contract",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getMyAssignedContracts",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "_contractId",
								"type": "uint256"
							},
							{
								"internalType": "enum Contracts.ContractState",
								"name": "contractState",
								"type": "uint8"
							},
							{
								"internalType": "enum Contracts.ContractType",
								"name": "contractType",
								"type": "uint8"
							},
							{
								"internalType": "uint32",
								"name": "numberOfParticipants",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "forVotes",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "againstVotes",
								"type": "uint32"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "payableUserAddress",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "payeeAddress",
								"type": "address"
							},
							{
								"internalType": "bool",
								"name": "hasPaidToContractAdmin",
								"type": "bool"
							}
						],
						"internalType": "struct Contracts.Contract[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_orgId",
						"type": "string"
					}
				],
				"name": "getMyOrgContracts",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "_contractId",
								"type": "uint256"
							},
							{
								"internalType": "enum Contracts.ContractState",
								"name": "contractState",
								"type": "uint8"
							},
							{
								"internalType": "enum Contracts.ContractType",
								"name": "contractType",
								"type": "uint8"
							},
							{
								"internalType": "uint32",
								"name": "numberOfParticipants",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "forVotes",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "againstVotes",
								"type": "uint32"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "payableUserAddress",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "payeeAddress",
								"type": "address"
							},
							{
								"internalType": "bool",
								"name": "hasPaidToContractAdmin",
								"type": "bool"
							}
						],
						"internalType": "struct Contracts.Contract[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTotalAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "makePayment",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ownerAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_contractId",
						"type": "uint256"
					}
				],
				"name": "payToContractAdmin",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "paymentAddress",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_contractId",
						"type": "uint256"
					}
				],
				"name": "sealContract",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_contractId",
						"type": "uint256"
					}
				],
				"name": "updateContractStatus",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"errors": {
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contract-management-receive-money/contract-management-receive-money/contracts/contract-management.sol": "ContractManagment"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"contract-management-receive-money/contract-management-receive-money/contracts/contract-management.sol": {
			"keccak256": "0xb4ec97e14eacbfeb9dcc8b80e0af24157b45cce1eb083f4065db0d5785436621",
			"license": "MIT",
			"urls": [
				"bzz-raw://43161edb7ca9aa5100d90d19f44da587e4b61b2ea0a47b52a0c10a56136efc32",
				"dweb:/ipfs/QmRZK9F6rcSGufwbsR2zK8sUe8cizkihwwiof1JEQB63nc"
			]
		},
		"contract-management-receive-money/contract-management-receive-money/contracts/contracts.sol": {
			"keccak256": "0xa13a3c4723170fdd7153e84031185b885bc2c8dc2933d058659c9bff169d97b1",
			"license": "MIT",
			"urls": [
				"bzz-raw://9066a9a97853db777e05085ea9aa18529f879da84f380bcf857190a5ba1288e8",
				"dweb:/ipfs/QmX5VafQH8nQLtrm4NKvXFvJb6nYvFzLPpEfBB1pvTAUuP"
			]
		},
		"contract-management-receive-money/contract-management-receive-money/contracts/id-generator.sol": {
			"keccak256": "0x4018adfd06720e89597e928c98bad7930437968848bc9a14efbf663e9814eedd",
			"license": "MIT",
			"urls": [
				"bzz-raw://f99b042d9457b1cac8383cac1d47960cbe5c88e0583707c902f2c05558545c27",
				"dweb:/ipfs/QmWTgJaRotFT7KjDVHqdK3W9uHXAogyHmW5Yba1nzL7xtD"
			]
		}
	},
	"version": 1
}